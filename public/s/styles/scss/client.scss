/**
 * Stylesheet for the client
*/

// Set line-height
$font-line-height: 1.5em;

// Import global settings
@import "settings";

// Import components from lace
@import "../../../../bower_components/lace/src/scss/base";
@import "../../../../bower_components/lace/src/scss/animations";
@import "../../../../bower_components/lace/src/scss/alertbar";
@import "../../../../bower_components/lace/src/scss/modal";
@import "../../../../bower_components/lace/src/scss/popover";
@import "../../../../bower_components/lace/src/scss/switch";
@import "../../../../bower_components/lace/src/scss/button";
@import "../../../../bower_components/lace/src/scss/entry";
@import "../../../../bower_components/lace/src/scss/multientry";
@import "../../../../bower_components/lace/src/scss/flexbox";
@import "../../../../bower_components/lace/src/scss/tooltip";
@import "../../../../bower_components/lace/src/scss/progressbar";
@import "../../../../bower_components/lace/src/scss/linked";
@import "../../../../bower_components/lace/src/scss/filter";
@import "../../../../bower_components/lace/src/scss/dropshadow";
@import "../../../../bower_components/lace/src/scss/grid";
@import "../../../../bower_components/lace/src/scss/icons";

@import "themes";
@import "tip";
@import "cards";

// Widget styles
%scroll-elem {
    max-height: 100%;
    overflow-y: scroll; /* should be scroll, not auto for momentum scrolling */
    -webkit-overflow-scrolling : touch; /* momentum scrolling in webkit */
}

%column {
    position: fixed;
    top: 0;
    bottom: 0;
    height: 100%;
}

%title-icon {
    @include flex-shrink(0);

    display: block;
    margin: auto;
    height: 2em;
    width: 2em;
    opacity: .75;

    &:hover, &:focus { opacity: .85; }

    &:active { opacity: 1; }
}

@mixin title-icon($elem) {
    .#{$elem} { @extend %title-icon; }
}

html, body { height: 100%; }

body {
    $map: (
        role: $roles,
        webview: (),
        embed: $embeds,
        mode: $modes,
        platform: $platforms,
        state: $states
    );

    $multi: ( role );

    @include filter($map, $multi); /* show hide elements based on filter */

    word-wrap: break-word; /* wrap long lines to avoid horizontal scrollbar */
    overflow: hidden; /* fix overflow in firefox */
}

.room-area {
    @extend %column;

    left: ( $width-room + $width-meta ) * -1;
    width: $width-room;
    background-color: $dark-color;
    color: $light-color;
    z-index: 10;
    padding-bottom: $bar-height * 2; /* adjust to accomodate the logo and create room button */

    @media #{$screenx} {
        left: ( $width-roomx + $width-metax ) * -1;
        width: $width-roomx;
    }

    @media #{$screenxx} {
        left: ( $width-roomxx + $width-metaxx ) * -1;
        width: $width-roomxx;
    }

    @media #{$screenxxx} {
        left: $width-roomxxx * -1;
        width: $width-roomxxx;
    }

    @media #{$screenxxxx} {
        left: 0;
        width: $width-roomxxxx;
    }
}

.room-header {
    height: $bar-height;
    background: url(../../img/scrollback-logo.svg) no-repeat 1em center;
    border-bottom: 1px solid lighten($dark-color, 5%);
    cursor: pointer;
}

.room-list { @extend %scroll-elem; }

.room-item {
    @extend %snappy;

    display: block;
    padding: 1em;
    font-weight: 700;
    color: $light-color;
    border-bottom: 1px solid lighten($dark-color, 5%);

    &:hover, &:focus, &.current:hover, &.current:focus {
        color: $light-color;
        background-color: rgba(0,0,0,.3);
    }

    &:active, &.current:active {
        color: $light-color;
        background-color: rgba(0,0,0,.5);
    }

    &.current {
        position: relative;
        background-color: rgba(0,0,0,.1);

        /* show a little triangle next to the current room */
        &:after {
            content: "";
            display: block;
            position: absolute;
            right: 0;
            top: 1.2em;
            border-top: .6em solid transparent;
            border-bottom: .6em solid transparent;
            border-right: .6em solid darken($light-color, 5%);
        }
    }

    &.search-term { background: url(../../img/client/icons/search-light.svg) no-repeat 90% center; }

    .room-item-unread-count {
        @extend %appear;

        float: right;
        min-width: 2em;
        text-align: center;
        font-size: .8em;
        font-weight: 700;
        background-color: $accent-color;
        color: $light-color;
        border-radius: $roundness;

        &:empty { display: none; }

        &.mentioned { background-color: $error-color; }
    }
}

.room-area-create-new {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    background-color: $dark-color;
    border-top: 1px solid lighten($dark-color, 5%);
    box-shadow: 0 -3px 2px -1px rgba(0,0,0,.1);

    &-button {
        display: block;
        font-weight: 700;
        margin: 0;
        padding: .5em 0;
        color: $light-color;
        text-transform: uppercase;

        &:hover, &:focus {
            color: $light-color;
            background-color: rgba(0,0,0,.3);
        }

        &:active {
            color: $light-color;
            background-color: rgba(0,0,0,.5);
        }

        &:before {
            content: "+";
            color: $accent-color;
            font-size: 1.5em;
            vertical-align: -.1em;
            margin: 0 .5em;
        }
    }
}

.meta-area {
    @extend %column;

    left: $width-meta * -1;
    width: $width-meta;
    background-color: darken($light-color, 5%);
    color: $dark-color;
    box-shadow: inset -1px 0 0 rgba(0,0,0,0.1);
    z-index: 20;

    @media #{$screenx} {
        left: $width-metax * -1;
        width: $width-metax;
    }

    @media #{$screenxx} {
        left: $width-metaxx * -1;
        width: $width-metaxx;
    }

    @media #{$screenxxx} {
        left: 0;
        width: $width-metaxxx;
    }

    @media #{$screenxxxx} {
        width: $width-metaxxxx;
        left: $width-roomxxxx;

        .embed &, .webview & { left: 0; }
    }
}

.meta-tabs {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include align-items(center);
    @include align-content(center);

    list-style: none;
    height: $bar-height;
    box-shadow: inset 0 -1px 0 0 rgba(0,0,0,.1);

    li {
        @include flexbox;
        @include flex-direction(row);
        @include flex-wrap(nowrap);
        @include justify-content(space-around);
        @include align-items(center);
        @include align-content(center);

        height: 100%;
        cursor: pointer;

        &.rooms-button {
            @include title-icon(rooms-icon);

            min-width: 3em;
            width: 3em;

            @media #{$screenxxxx} { display: none; }

            .rooms-icon {
                .view-rooms & { @include transform(rotate(180deg)); }
            }
        }
    }

    h3 { margin: 0; }

    .tab {
        @include flex-grow(1); /* grow to use all available space */
        @extend %snappy;

        text-align: center;
        background-color: transparent;
        border-left: 1px solid rgba(0,0,0,0.1);
        fill: $dark-color;
        fill-opacity: .5;

        &:first-child { border-left: none; }

        &:hover, &:focus {
            fill-opacity: .85;
            background-color: rgba(0,0,0,.05);
        }

        &:active {
            fill-opacity: 1;
            background-color: rgba(0,0,0,.05);
        }

        &.current {
            fill-opacity: .85;
            background-color: rgba(0,0,0,.1);
        }
    }

    .meta-header {
        @include justify-content(flex-start);

        padding-left: .25em;
        text-transform: uppercase;
        cursor: default;

        .embed &, .webview & { padding-left: .75em; }

        @media #{$screenxxxx} {
            padding-left: 4.25em;

            .mode-conf &, .mode-pref & { background: url(../../img/client/icons/settings.svg) 1em center no-repeat; }

            .mode-search & { background: url(../../img/client/icons/search-header.svg) 1em center no-repeat; }
        }

        h3 {
            font-size: 1.2em;
            font-weight: 700;

            @media #{$screenxxxx} {
                font-size: 1.5em;
                font-weight: 400;
            }
        }
    }
}

.meta-panes {
    position: relative;
    height: 100%;
    width: 100%;

    .pane {
        @include opacity(0);

        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        z-index: 0;
        pointer-events: none;
        padding-bottom: $bar-height; /* adjust to accomodate tabs */

        &.current {
            @include opacity(1);
            @extend %fadein;

            z-index: 10;
            pointer-events: auto;
        }
    }
}

.pane-info-wrap {
    position: relative;
    height: 100%;
    padding-bottom: $bar-height;
}

.pane-info-content {
    @extend %scroll-elem;

    padding: 1.5em;
}

.pane-info-privacy {
    font-size: .8em;
    position: absolute;
    bottom: 0;
    width: 100%;
    padding: 1.45em 1.875em;
    border-top: 1px solid darken($light-color, 20%);
    background-color: darken($light-color, 5%);
}

.pane-people-wrap {
    @extend %scroll-elem;

    padding: 1.5em .75em;

    .infinite-above, .infinite-below {
        background-color: transparent;
        background-image: linear-gradient(to right, darken($light-color, 5%), darken($light-color, 5%) 15%, transparent 15%, transparent 85%, darken($light-color, 5%) 85%, darken($light-color, 5%)),
                          linear-gradient(to bottom, transparent, transparent 25%, darken($light-color, 10%) 25%, darken($light-color, 10%) 65%, transparent 65%, transparent 75%, darken($light-color, 10%) 75%, darken($light-color, 10%) 85%, transparent 85%, transparent);
        background-size: 5.5em 8em;
        background-position: top left;
        background-repeat: repeat;
        background-repeat: round; /* limited browser support */

        .infinite-above.upper-limit, .infinite-below.lower-limit { background: none; }
    }
}

.person {
    @extend %nofilter; /* fix non-antialiased text in IE */
    @extend %snappy;

    position: relative;
    display: inline-block;
    padding: .25em;
    width: 5.5em;
    text-align: center;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    color: $dark-color;

    &:hover, &:focus, &:active {
        background-color: $accent-color;
        color: $light-color;
        border-radius: $roundness;
    }

    &.owner, &.admin, &.moderator {
        &:after {
            display: block;
            position: absolute;
            top: .25em;
            right: .25em;
            font-size: .8em;
            font-weight: 700;
            padding: 0 .25em;
            text-transform: uppercase;
            border-radius: $roundness;
        }
    }

    &.owner {
        &:after {
            content: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\' width=\'16\' height=\'16\'><g transform=\'translate(0,-1036.3622)\' fill=\'#fff\'><path d=\'m 2,1050.3622 -2,-8 c 0,-1 1,0 1,0 l 4,3 2,-3 c 1,-1 1,-1 2,0 l 2,3 4,-3 c 0,0 1,-1 1,0 l -2,8 c -1,2 -1,2 -3,2 l -6,0 c -2,0 -2,0 -3,-2 z\'/></g></svg>");
            background-color: $error-color;
            color: $light-color;
        }
    }

    &.admin {
        &:after {
            content: "Admin";
            background-color: $warning-color;
            color: $light-color;
        }
    }

    &.moderator {
        &:after {
            content: "Mod";
            background-color: $success-color;
            color: $light-color;
        }
    }

    &.offline {
        @include opacity(.5);

        .person-avatar { @extend %grayscale; }
    }
}

.person-avatar {
    display: block;
    width: 4em;
    height: 4em;
    margin: .25em .5em;
    border-radius: $roundness;
}

.pane-threads {
    .infinite-above, .infinite-below {
        background-color: transparent;
        background-image:  linear-gradient(to bottom, transparent, transparent 35%, darken($light-color, 10%) 35%, darken($light-color, 10%) 65%, transparent 65%, transparent),
                           linear-gradient(to bottom, darken($light-color, 10%), darken($light-color, 10%));
        background-size: 60% 3em, 4px 100%;
        background-position: 2em center, center right;
        background-repeat: repeat-y;

        .infinite-above.upper-limit, .infinite-below.lower-limit { background: none; }
    }
}

.pane-threads-wrap {
    @include flexbox;
    @include flex-direction(column);
    @include flex-wrap(nowrap);
    @include align-items(stretch);
    @include align-content(stretch);

    height: 100%;
    padding-bottom: $bar-height;
}

.thread-search-query {
    padding: 1em 1.5em;
    background-color: fade-out($info-color, .7);
    font-size: 1.2em;
}

.thread-search-query, .thread-all-discussions {
    box-shadow: inset 0 1px 0 0 rgba(0,0,0,.1),
                inset 0 -1px 0 0 rgba(0,0,0,.1),
                0 3px 2px -1px rgba(0,0,0,.1);
}

.thread-item-container {
    @include flex-grow(1);
    @extend %scroll-elem;

    margin-bottom: $bar-height * -1;
}

.thread-item {
    @extend %snappy;
    @extend %nofilter;

    display: block;
    padding: 1em 1.5em;
    color: $dark-color;
    border-right: 4px solid lighten($dark-color, 15%);
    cursor: pointer;
    box-shadow: inset 0 -1px 0 0 rgba(0,0,0,.05);

    &:last-of-type { box-shadow: none; }

    &:first-letter { text-transform: uppercase; } /* make the first letter uppercase, only works in webkit */

    &.current { background-color: fade-out(lighten($dark-color, 15%), .7); }

    &:hover, &:focus, &.current:hover, &.current:focus {
        background-color: lighten($dark-color, 15%);
        color: $light-color;
    }

    @for $i from 1 through length($palette) {
        $color: nth($palette, $i);
        $j: $i - 1;

        &.conv-#{$j} {
            border-right-color: $color;

            &.current { background-color: fade-out($color, .7); }

            &:hover, &:focus, &.current:hover, &.current:focus { background-color: $color; }
        }
    }
}

.thread-title { margin: 0; }

.thread-snippet { margin: 0; }

.meta-conf, .meta-pref {
    @extend %scroll-elem;

    height: 100%;
    padding-bottom: $bar-height;
}

.list-item {
    @extend %snappy;

    position: relative;
    display: block;
    font-size: 1.2em;
    line-height: 1;
    padding: .75em;
    padding-left: 2.75em;
    background-size: 24px 24px;
    background-position: .75em center;
    background-repeat: no-repeat;
    border-bottom: 1px solid darken($light-color, 10%);
    color: $dark-color;
    cursor: pointer;

    @media #{$screenxxxx} { font-size: 1.5em; }

    &.current { background-color: rgba(0,0,0,.05); }

    &:after {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 2em;
        display: block;
        content: "";
        background-color: transparent;
        background-repeat: no-repeat;
        background-position: center center;
    }

    $types: info, success, warning, error;

    @each $type in $types {
        &.#{$type} {
            &:after { background-image: url(../../img/client/icons/#{$type}-icon.svg); }
        }
    }

    &:hover, &:focus, &.current:hover, &.current:focus {
        background-color: rgba(0,0,0,.1);
        color: $dark-color;
    }

    &:active, &.current:active { background-color: rgba(0,0,0,.2); }

    @each $setting in $settings {
        &.list-item-#{$setting}-settings { background-image: url(../../img/client/icons/#{$setting}-settings.svg); }
    }
}

.main-area {
    @extend %column;

    position: fixed;
    left: 0;
    right: 0;
    z-index: 30;

    @media #{$screenxxx} { left: $width-metaxxx; }

    @media #{$screenxxxx} {
        left: $width-roomxxxx + $width-metaxxxx;

        .embed &, .webview & { left: $width-metaxxxx; }
    }
}

.home-area {
    .title-bar { position: fixed; }

    .header-image {
        background: url(../../img/scrollback-logo-dark.svg) no-repeat 1em center;
        height: 3.5em;
        width: 12em;
        max-width: 100%;

        .theme-dark & { background: url(../../img/scrollback-logo.svg) no-repeat 1em center; }
    }
}

.home-area-cover {
    @extend %transition;

    width: 100%;
    min-height: $bar-height * 3;
    max-height: $bar-height * 3;
    background-color: $light-color;
    border-bottom: 1px solid darken($light-color, 5%);
    color: $dark-color;
    text-align: center;

    @media #{$screenxx} {
        min-height: $bar-height * 2;
        max-height: $bar-height * 2;
    }

    .scroll-up & { opacity: 0; }
}

.home-area-cover-content {
    margin: 0 auto;
    padding: 2em .75em;

    input[type="text"], input[type="submit"] {
        width: 100%;
        margin: .25em;

        @media #{$screenxx} {
            @include linked;

            width: auto;
            margin: 0;
        }
    }

    input[type="text"] {
        @media #{$screenxxx} { min-width: 27em; }
    }
}

.home-area-container {
    @include flexbox;
    @include flex-direction(column);
    @include flex-wrap(nowrap);

    padding-top: $bar-height;
    height: 100%;
    overflow-x: hidden;
}

.home-area-heading {
    color: lighten($dark-color, 20%);
    text-transform: uppercase;
    margin: 1em .5em 0 .5em;
}

.card-container-wrap {
    @include flex-grow(1);
    @extend %scroll-elem;

    width: 100%;
    overflow-x: hidden;
}

.card-container:not(:last-of-type):not(:only-of-type) { border-bottom: 1px solid darken($light-color, 10%); }

.card-container {
    @extend %fadein;

    padding: .5em;

    & + .home-area-no-my-rooms {
        display: none;
        color: darken($light-color, 20%);
        font-size: 2em;
        padding: 2em .5em;
    }

    &:empty {
        display: none;

        & + .home-area-no-my-rooms { display: block; }
    }
}

.meta-button, .rooms-button {
    width: 3em;
    cursor: pointer;
}

.meta-icon, .rooms-icon {
    @include transform(rotate(0deg));
    @include transition(.5s);
}

.meta-button {
    @include title-icon(meta-icon);

    height: $bar-height;
    fill: $dark-color;
    overflow: hidden;
    padding: .75em .5em;

    @media #{$screenxxx} { display: none; }

    .meta-icon {
        .view-meta &, .view-rooms & { @include transform(rotate(180deg)); }
    }

    .toast-minimized & { display: none; }
}

.sb-icon-top { fill: $accent-color; }

.sb-icon-bottom { fill: $dark-color; }

.title-bar {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include justify-content(space-between);
    @include align-items(center);
    @include align-content(center);

    position: relative;
    height: $bar-height;
    width: 100%;
    z-index: 20;
    background-color: darken($light-color, 5%);
    color: $dark-color;
    box-shadow: inset 0 -1px 0 0 rgba(0,0,0,.1),
                -1px 0 0 rgba(0,0,0,.1),
                0 3px 2px -1px rgba(0,0,0,.1);
}

.left-area {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include justify-content(flex-start);
    @include align-items(center);
    @include align-content(center);
}

.right-area {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include justify-content(flex-end);
    @include align-items(center);
    @include align-content(center);
    @include flex-shrink(0);

    .toast-minimized & { display: none; }
}

.room-title {
    @extend %transition;

    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-size: 1.2em;
    font-weight: 700;
    margin: 0;
    padding: .25em 0;
    line-height: 1;

    @media #{$screenxxx} {
        font-size: 1.5em;
        padding: .125em 0;
    }
}

.title-logotype {
    @extend %transition;

    height: $bar-height;
    padding: .75em 0;
    overflow: hidden;

    @media #{$screenxxx} { padding-left: 1.5em; }

    .toast-minimized & { padding-left: 1em; }

    .has-messages & { display: none; }
}

.title-logotype-icon {
    @extend %transition;

    height: 2em;
    fill: $dark-color;
}

.embed {
    &.toast-minimized {
        .title-logotype { @include transform(translate3d(0, 0, 0)); }
    }

    .title-logotype {
        @include transform(translate3d(-2em, 0, 0));

        .title-logotype-icon {
            @include opacity(1);
            @include transform(translate3d(0, 0, 0));
        }

        .room-title {
            @include opacity(0);
            @include transform(translate3d(0, 0, 0));
        }


        @media #{$screenxxx} { @include transform(translate3d(0, 0, 0)); }
    }

    .meta-button {
        @include opacity(0);
        @include transform(translate3d(-100%, 0, 0));
    }

    &:not(.toast-minimized) {
        &:focus, &:hover, &:active {
            .title-logotype {
                @include transform(translate3d(0, 0, 0));

                .title-logotype-icon {
                    @include opacity(0);
                    @include transform(translate3d(0, -100%, 0));
                }

                .room-title {
                    @include opacity(1);
                    @include transform(translate3d(0, -100%, 0));
                }
            }

            .meta-button {
                @include opacity(1);
                @include transform(translate3d(0, 0, 0));
            }
        }
    }
}

.follow-button {
    @include title-icon(follow-icon);

    width: 3.5em;
    padding: .75em;
    margin: 0 .5em;

    .role-owner & { display: none; }
}

.follow-icon {
    @include icon(star-empty);

    color: $dark-color;

    .role-follower & { @include icon(star); }

    &:before {
        font-size: 2em;
        vertical-align: -.3em;
    }
}

.embed-area, .user-area {
    @include flexbox;
    @include flex-direction(row);
    @include flex-wrap(nowrap);
    @include justify-content(flex-end);
    @include align-items(center);
    @include align-content(center);
    @include flex-shrink(0);
}

.embed-button, .search-button {
    @include title-icon(search-icon);
    @include title-icon(embed-icon);

    width: 3.5em;
    padding: .75em .5em;
    cursor: pointer;
    fill: $dark-color;
}

.cta-area {
    text-align: right;
    padding: 0 1em;
    font-weight: 700;
    cursor: pointer;
    white-space: nowrap;

    .cta-action {
        text-transform: uppercase;

        .theme-dark & { color: $accent-color; }
    }
}

.full-view-action {
    display: none;

    .role-follower.embed &, .role-owner.embed & { display: block; }
}

.user-avatar {
    display: none;
    cursor: pointer;

    img {
        display: block;
        height: $bar-height;
        width: $bar-height;
    }

    @media #{$screenxx} { display: block; }

    .embed &, .webview & {
        @media #{$screenx} { display: block; }
    }
}

.action-buttons {
    padding: .25em;

    .button {
        display: block;
        float: left;
        margin: .25em;
        word-wrap: normal;
        overflow: hidden; /* fix unusual button size when not enough horizontal space */
        text-overflow: ellipsis;
    }
}

.minimize-ticker {
    display: none;

    .has-messages & {
        @extend %fadein;

        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        padding: 0 1em;
    }
}

.quick-notification-container {
    position: absolute;
    top: $bar-height;
    left: 0;
    right: 0;
    z-index: 200;
}

.quick-notification-item {
    @extend %slidedown;

    padding: 1em;
    border-bottom: 1px solid rgba(0,0,0,.15);

    &:only-of-type, &:last-of-type { border-bottom: none; }

    @media #{$screenxxxx} { padding: 1em 1.5em; }

    &.info {
        background-color: $info-color;
        color: $light-color;
    }

    &.success {
        background-color: $success-color;
        color: $light-color;
    }

    &.warning {
        background-color: $warning-color;
        color: $light-color;
    }

    &.error {
        background-color: $error-color;
        color: $light-color;
    }
}

.chat-area-container {
    position: absolute;
    top: $bar-height;
    bottom: $bar-height;
    right: 0;
    left: 0;
    overflow: hidden;
}

.chat-area {
    @extend %scroll-elem;

    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
    background-color: $light-color;

    .infinite-above, .infinite-below {
        background-color: transparent;
        background-image: linear-gradient(to bottom, transparent, transparent 30%, darken($light-color, 3%) 30%, darken($light-color, 3%) 40%, transparent 40%, transparent),
                          linear-gradient(to bottom, transparent, transparent 30%, darken($light-color, 3%) 30%, darken($light-color, 3%) 40%, transparent 40%, transparent),
                          linear-gradient(to bottom, transparent, transparent 60%, darken($light-color, 3%) 60%, darken($light-color, 3%) 70%, transparent 70%, transparent);
        background-size: .6em 6em, 80% 6em, 60% 6em;
        background-position: 1em 2em, 3em 2em, 3em 2em;
        background-repeat: repeat-y;
        background-attachment: scroll;

        @media #{$screenxx} {
            background-image: linear-gradient(to bottom, transparent, transparent 30%, darken($light-color, 3%) 30%, darken($light-color, 3%) 40%, transparent 40%, transparent),
                              linear-gradient(to bottom, transparent, transparent 30%, darken($light-color, 3%) 30%, darken($light-color, 3%) 40%, transparent 40%, transparent),
                              linear-gradient(to bottom, transparent, transparent 30%, darken($light-color, 3%) 30%, darken($light-color, 3%) 40%, transparent 40%, transparent),
                              linear-gradient(to bottom, transparent, transparent 60%, darken($light-color, 3%) 60%, darken($light-color, 3%) 70%, transparent 70%, transparent);
            background-size: .6em 6em, 6em 6em, 80% 6em, 60% 6em;
            background-position: 2em 2em, 4em 2em, 12em 2em, 12em 2em;
        }

        .infinite-above.upper-limit, .infinite-below.lower-limit {
            background: none;

            @media #{$screenxx} { background: none; }
        }
    }
}

%chat-quick-action {
    @include opacity(0);
    @extend %transition;

    position: absolute;
    right: 2em;
    padding: .75em 1em;
    font-weight: 700;
    border-radius: $roundness;
    z-index: 20;
    pointer-events: none;

    &.visible { @include opacity(1); }
}

.chat-position {
    @extend %chat-quick-action;
    @include dropshadow(2);

    background-color: $dark-color;
    color: $light-color;
    cursor: pointer;
    top: 1em;
}

.chat-scroll-to-bottom {
    @include transform(translate3d(0, 100%, 0));
    @include dropshadow(2);
    @include icon(down-big);
    @extend %chat-quick-action;

    padding: .75em 1em;
    background-color: $info-color;
    color: $light-color;
    cursor: pointer;
    bottom: 1em;

    &:focus, &:hover { background-color: darken($info-color, 5%); }

    &:active { background-color: darken($info-color, 10%); }

    &.visible {
        @include transform(translate3d(0, 0, 0));

        pointer-events: auto;
    }
}

.chat-item {
    @extend %snappy;

    position: relative;
    margin: 0;
    padding: .75em 3em .75em 3em;
    border-top: 1px solid rgba(0,0,0,0.025);
    overflow: hidden;

    @media #{$screenxx} { padding: 1em 3.5em 1em 12em; }

    &:hover, &:focus { background-color: darken($light-color, 1%); }

    &:last-of-type { border-bottom: 1px solid rgba(0,0,0,0.025); }

    &.current { background-color: darken($light-color, 3%); }

    &:hover, &:focus, &:active, &.active {
        .chat-more { @include transform(translate3d(0, 0, 0)); }
    }

    &:hover, &:focus, &.active, &.current {
        border-top: 1px solid darken($light-color, 10%);

        & + .chat-item { border-top: 1px solid darken($light-color, 10%); }

        .chat-timestamp { color: fade-out($dark-color, .3); }
    }

    &.chat-error-not-sent {
        &:after {
            content: "";
            height: 1.5em;
            width: 1.5em;
            float: right;
            background: url(../../img/client/icons/error-icon.svg) no-repeat center center;
        }
    }

    &.chat-item-long {
        @extend %transition;

        max-height: 12em;
        cursor: pointer;

        &:hover, &:focus {
            &:after { padding: 1em 0; }
        }

        &:after {
            @extend %transition;

            content: "";
            position: absolute;
            display: block;
            bottom: 0;
            width: 100%;
            padding: 3em 0;
            background-image: linear-gradient(to bottom, fade-out($light-color, 1) 0%, $light-color 100%);
        }

        &.current {
            max-height: 20em;
            overflow-y: scroll;

            &:after { display: none; }
        }
    }

    &.chat-label-action {
        color: lighten($dark-color, 5%);
        border-right: 2px solid lighten($dark-color, 30%);
        font-style: italic;

        @for $i from 1 through length($palette) {
            $color: nth($palette, $i);
            $j: $i - 1;

            &.conv-#{$j} { border-right-color: $color; }
        }

        &:before { display: none; }

        .chat-nick {
            font-weight: 400;
            padding-right: .25em;

            &:after { content: ""; }

            @media #{$screenxx} { margin-left: 0; }
        }
    }

    &.chat-label-hidden, &.chat-label-abusive {
        color: fade-out($dark-color, .5);
        font-style: italic;

        body:not(.role-owner) & {
            // display: none gives javascript undefined offsets, which messes with infinite scroll!
            height: 0;
            overflow: hidden;
            padding: 0;
            margin: 0;
            border: none;
        }
    }

    .chat-timestamp {
        display: none;
        padding-left: 3em;
        font-size: .8em;
        float: right;
        color: fade-out($dark-color, .5);
    }

    &:last-of-type, &.chat-item-timestamp-shown {
        .chat-timestamp { display: inline-block; }
    }

    // Embed stuff
    iframe, embed {
        display: block;
        margin: .5em 0;
        max-width: 100%;
        max-height: auto;
    }
}

.markdown-text {
    a {
        &:hover, &:focus, &:active { text-decoration: underline; }
    }

    // Markdown stuff
    h1, h2, h3, h4, h5, h6 {
        font-weight: 700;
        font-size: 1em;
        margin-bottom: .5em;
        padding-bottom: .5em;
        border-bottom: 1px solid darken($light-color, 10%);
    }

    pre, blockquote {
        margin: 1em 0;
        clear: both;

        &:first-child { margin-top: 0; }

        &:last-child { margin-bottom: 0; }

        &:only-child { margin: 0; }
    }

    blockquote {
        font-style: italic;
        padding-left: 1em;
        border-left: 2px solid darken($light-color, 10%);
        clear: both;
    }

    p {
        margin: 0;

        &:only-child { display: inline; }

        & + p, & + h1, & + h2, & + h3, & + h4, & + h5, & + h6 { margin-top: 1em; }
    }

    ul, ol { margin: 1em 0 1em 2em }

    hr {
        border: none;
        height: 1px;
        margin: 1em 0;
        background-color: lighten($dark-color, 50%);
    }
}

.emoji {
   height: 1em;
   width: 1em;
   vertical-align: -.1em;
}

@mixin missing($bg) {
    background-color: darken($bg, 5%);

    &:before {
        background: linear-gradient(45deg, darken($bg, 5%) 50%, transparent 50%),
                    linear-gradient(135deg, $bg 50%, transparent 50%) 0 50%;
    }

    &:after {
        background: linear-gradient(135deg, darken($bg, 5%) 50%, transparent 50%),
                    linear-gradient(45deg, $bg 50%, transparent 50%) 0 50%;
    }

    &:before, &:after { background-color: darken($bg, 5%); }
}

.chat-item-missing {
    @include missing($light-color);

    & + .chat-item { border-top: none; }
}

.thread-item-missing { @include missing(darken($light-color, 5%)); }

.chat-item-missing, .thread-item-missing {
    padding: 0;
    margin: 0;
    border-top: none;
    text-align: center;
    font-style: italic;

    &:before, &:after {
        content: "";
        display: block;
        height: 12px;
        width: 100%;
        background-size: 12px 12px;
        background-repeat: repeat-x;
    }
}

$convdefault: lighten($dark-color, 50%);

%conv-dots {
    @extend %transition;

    height: .5em;
    width: .5em;
    border-radius: 50%;
    color: $convdefault; /* only for enabling use of currentColor */
    background-color: currentColor; /* use the same color as text */

    &.pulsed { box-shadow: 0 0 0 8px fade-out($dark-color, .7); }

    &.faded { @include opacity(.3); }
}

.chat-item-dot {
    @extend %conv-dots;

    content: "";
    float: left;
    margin: .55em 0 auto -2em;

    @for $i from 1 through length($palette) {
        $color: nth($palette, $i);
        $j: $i - 1;

        .chat-item.conv-#{$j} & {
            color: $color;

            &.pulsed { box-shadow: 0 0 0 8px fade-out($color, .6); }
        }
    }

    @media #{$screenxx} { margin-left: -10em; }
}

.chat-nick {
    float: left;
    margin-left: 0;
    padding-right: 1em;
    font-weight: 700;

    &:after { content: " :" }

    @media #{$screenxx} {
        margin-left: -8em;

        &:after { content: "" }
    }

    a {
        color: $dark-color;

        &:hover, &:focus, &:active { color: darken($dark-color, 10%); }
    }
}

.chat-conv-line {
    width: 3px;
    position: fixed;
    margin-left: 1.15em;
    z-index: 50;
    background-color: $convdefault;
    pointer-events: none;

    @media #{$screenxx} { margin-left: 2.15em; }

    @for $i from 1 through length($palette) {
        $color: nth($palette, $i);
        $j: $i - 1;

        .conv-#{$j} & { background-color: $color; }
    }
}

.chat-more {
    @include transform(translate3d(3.5em, 0, 0));
    @extend %transition;

    position: absolute;
    display: block;
    background-image: url(../../img/client/icons/chat-more.svg);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 2em 2em;
    width: 3em;
    height: 3em;
    top: 0;
    right: 0;
    cursor: pointer;

    @media #{$screenxx} {
        width: 3.5em;
        height: 3.5em;
    }
}

.chat-input {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 0;
    min-height: $bar-height;
    box-shadow: 0 -3px 2px -1px rgba(0,0,0,.1);;
}

.chat-entry-wrap { position: relative; }

$dotshadow: fade-out($accent-color, .6);

@include keyframes(dotpulse) {
    0% {
        background-color: $accent-color;
        box-shadow: 0 0 0 0 $dotshadow;
    }

    75% {
        background-color: $accent-color;
        box-shadow: 0 0 0 8px $dotshadow;
    }

    100% {
        background-color: currentColor;
        box-shadow: 0 0 0 0 $dotshadow;
    }
}

.chat-conv-dot-wrap {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3em;

    @media #{$screenxx} { width: 3.5em; }

    .chat-conv-dot {
        @extend %conv-dots;

        position: absolute;
        content: "";
        top: 1em;
        left: 1em;
        margin: .55em 0 auto 0;

        @for $i from 1 through length($palette) {
            $color: nth($palette, $i);
            $j: $i - 1;

            .conv-#{$j} & {
                background-color: $color;

                &.pulsed { box-shadow: 0 0 0 8px fade-out($color, .6); }
            }
        }

        @media #{$screenxx} { left: 2em; }

        &.animating { @include prefix(animation, dotpulse 1s 1); }
    }
}

.chat-placeholder {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    position: absolute;
    top: 0;
    left: 2.9em;
    right: 1em;
    color: fade-out($dark-color, .5);
    line-height: 3.5em;

    @media #{$screenxx} { left: 3.9em; }

    .text-button {
        color: currentColor;
        font-weight: 700;
        text-decoration: underline;
        padding: .5em;
        border: 1px solid transparent;
        border-radius: $roundness;

        &:focus, &:hover {
            color: $dark-color;
            border-color: darken($light-color, 30%);
            box-shadow: 0 1px 5px 0 rgba(0,0,0,0.15);
        }

        &:active { background-color: rgba(0,0,0,0.05); }
    }
}

.chat-entry {
    @extend .entry;

    word-wrap: break-word;
    width: 100%;
    min-height: $bar-height;
    max-height: 12em;
    padding: .9em 2.5em .9em 2.9em;
    overflow: auto;
    border-radius: 0;

    @media #{$screenxx} { padding-left: 3.9em; }

    &:hover, &:focus, &:active {
        border-color: $accent-color;
        outline: none;

        @for $i from 1 through length($palette) {
            $j: $i - 1;

            .conv-#{$j} & { border-color: nth($palette, $i); }
        }
    }

    .state-offline & { @extend .entry.disabled; }
}

.chat-send {
    @extend %snappy;

    position: absolute;
    right: 0;
    bottom: 0;
    margin: 0;
    padding: .75em;
    height: 3.5em;
    width: 3.5em;
    border: none;
    cursor: pointer;
    fill: lighten($dark-color, 15%); /* inline SVG styling */

    &:hover, &:focus, &:active { fill: $dark-color; }

    @for $i from 1 through length($palette) {
        $color: nth($palette, $i);
        $j: $i - 1;

        .conv-#{$j} & {
            fill: $color;

            &:hover, &:focus, &:active { fill: darken($color, 10%); }
        }
    }
}

.conf-area, .pref-area {
    @extend %scroll-elem;

    position: absolute;
    top: $bar-height;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: $light-color;

    .list-view {
        display: none;

        &.current {
            @extend %fadein;
            @extend %nofilter;

            display: block;
            max-width: 100%;

            @media #{$screenxx} {
                display: table;
                table-layout: fixed;
                border-spacing: 2em;
            }
        }

        .conf-request-msg {
            display: table-row;

            img {
                max-width: 80px;
                max-height: 80px;
                border-radius: $roundness;
            }

            img, .request-details {
                display: table-cell;
                vertical-align: top;
            }

            .username {
                a {
                    font-size: 1.2em;
                    color: $dark-color;

                    &:hover, &:focus, &:active { color: darken($dark-color, 10%); }
                }
            }

            .button, .button-secondary { padding: .5em 1em; }
        }

        .picture-container {
            position: relative;
            padding: 0;
        }

        .picture-list { position: absolute; }

        .conf-twitter-account, .pref-user-avatar {
            position: relative;
            display: block;
            height: 80px;
            width: 80px;
            margin: 0 .25em;
            background-size: contain;
            border-width: 0.5em;
            border-style: solid;
            border-color: transparent;
            display: inline-block;
            border-radius: $roundness;
            cursor: pointer;

            &:focus, &:hover { border-color: fade-out($dark-color, .7); }

            &:active { border-color: fade-out($dark-color, .5); }

            &.current { border-color: $accent-color; }

            img {
                border-radius: $roundness;
                height: 100%;
                width: 100%;
            }

            .label {
                position: absolute;
                left: 0;
                bottom: 0;
                width: 100%;
                padding: .5em;
                background-color: rgba(0,0,0,0.5);
                font-weight: 700;
                text-transform: uppercase;
                text-align: center;
                color: $light-color;
                border-radius: 0 0 $roundness $roundness;
            }
        }
    }
}

.settings-item {
    display: block;
    padding: 1em;

    @media #{$screenxx} { display: table-row; }

    .check-item, .radio-item {
        display: block;
        padding: .5em 0;
    }

    .embed-code {
        min-height: 15em;
        background-color: darken($light-color, 5%);
        font-weight: 700;
        font-family: $font-family-monospace;
        line-height: 1.2em;
    }

    input, textarea, .button, .button-secondary, .multientry {
        margin: 0 0;
        max-width: 100%;
    }

    input[type="text"], input[type="url"], textarea { min-width: 21em; }

    textarea {
        resize: vertical;
        min-height: 9em;
    }

    input[type="checkbox"], input[type="radio"] {
        float: left;
        margin-right: .5em;
    }

    input[type="color"] {
        height: 2.5em;
        width: 12em;
        padding: 0 .1em;
        cursor: pointer;
    }

    .embed-share-button {
        margin: 0 .25em;

        &:first-of-type { margin-left: 0; }
    }
}

.settings-label, .settings-action {
    display: block;
    padding: .25em;

    @media #{$screenxx} {
        display: table-cell;
        min-width: 30%;
        max-width: 50%;
    }
}

.settings-label {
    padding-right: 1em;

    @media #{$screenxx} {
        vertical-align: top;
        padding: .5em 0;
    }
}

.settings-action {
    text-align: left;
    vertical-align: middle;
}

.search-bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 90;
    padding: 1em;
    display: none;

    .search-focus & { display: block; }

    .search-entry {
        @include dropshadow(3);

        position: relative;
        display: block;
        width: 100%;
        height: 3em;
        margin: 0;
        padding-left: 3.5em;
        background-image: url(../../img/client/icons/search-gray.svg);
        background-position: 1em center;
        background-repeat: no-repeat;
        background-size: 3em 2em;
        border: none;
    }
}

.content-area-right {
    @extend %column;

    left: 0;
    right: 0;
    z-index: 100;

    @media #{$screenxxxx} {
        left: $width-roomxxxx;

        .embed &, .webview & { left: 0; }
    }
}

.content-area-full {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 400;
}

.content-view-wrapper {
    @include flexbox;
    @include flex-direction(column);
    @include flex-wrap(nowrap);
    @include justify-content(space-around);
    @include align-items(center);
    @include align-content(center);

    padding: 1em;
    background-color: $light-color;
    color: fade-out($dark-color, .3);
    text-align: center;

    h2 {
        font-size: 1.5em;

        @media #{$screenxxxx} { font-size: 2.4em; }
    }
}

.content-view-area { display: block; }

.infinite-above, .infinite-below {
    height: 100%;
    width: 100%;
}

.infinite-items { width: 100%; }

.dialog {
    input, .button { width: 100%; }
}

%popup-menu { min-width: 18em; }

.user-menu { @extend %popup-menu; }

.popover-calls-to-action {
    @extend %popup-menu;

    font-weight: 700;
}

.popover-got-it {
    @include icon(done);
    @extend %popover-item;
    @extend %snappy;

    background-color: rgba(0,0,0,.1);
    padding: 1em;
    text-transform: uppercase;
    cursor: pointer;

    &:focus, &:hover { background-color: rgba(0,0,0,.2); }

    &:active { background-color: rgba(0,0,0,.3); }

    &:before { margin-right: 1em; }
}

%popover-item {
    &:before {
        opacity: .7;
        margin-right: 1em;
        font-size: 1.2em;
        vertical-align: -.1em;
    }
}

.user-menu {
    .homefeed {
        @extend %popover-item;

        &:before { @include icon(grid); }
    }

    .userpref {
        @extend %popover-item;

        &:before { @include icon(configure); }
    }

    .reportissue {
        @extend %popover-item;

        &:before { @include icon(info-circled); }
    }

    .logout {
        @extend %popover-item;

        &:before { @include icon(off); }
    }
}

.guest-sound-notification-disable {
    @extend %popover-item;

    &:before { @include icon(audio); }
}

.guest-sound-notification-enable {
    @extend %popover-item;

    &:before { @include icon(audio-off); }
}

.embed-toast.toast-minimized {
    .alert-bar { display: none; }
}

.content-view-cordova-startpage { font-size: 1.2em; }

.cordova-login-buttons {
    .button {
        display: block;
        margin: 1em;
    }
}

.ie-warning {
    display: table;
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: $warning-color;
    color: $light-color;
    font-size: 16px;
    z-index: 99999;

    a {
        font-weight: 700;
        color: $light-color;
        border-bottom: 1px dotted $light-color;

        &:focus, &:hover { border-bottom-style: solid;}
    }
}

.ie-warning-content {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
}

.room-area, .meta-area, .main-area {
    @include transition(.3s ease-out); /* animate css transforms */
    @include transform(translate3d(0, 0, 0)); /* enable hardware acceleration in small screen */

    @media #{$screenxx} { @include transform(none); }

    /* fix flicker in some browsers */
    .view-meta &, .view-rooms & {
        @include prefix(backface-visibility, hidden);
        @include prefix(perspective, 1000);
    }

    /* use 3d transformations for GPU accelerated animations */
    .view-meta & {
        @include transform(translate3d($width-meta, 0, 0));

        @media #{$screenx} { @include transform(translate3d($width-metax, 0, 0)); }

        @media #{$screenxx} { @include transform(translate3d($width-metaxx, 0, 0)); }

        @media #{$screenxxx} { @include transform(translate3d(0, 0, 0)); }
    }

    .view-rooms & {
        @include transform(translate3d( ( $width-room + $width-meta ), 0, 0));

        @media #{$screenx} { @include transform(translate3d( ( $width-roomxx + $width-metax ), 0, 0)); }

        @media #{$screenxx} { @include transform(translate3d( ( $width-roomxx + $width-metaxx ), 0, 0)); }

        @media #{$screenxxx} { @include transform(translate3d($width-roomxxx, 0, 0)); }

        @media #{$screenxxxx} { @include transform(translate3d(0, 0, 0)); }
    }
}
