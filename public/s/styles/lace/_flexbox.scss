@mixin flexbox {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-box;
	display: -ms-flexbox;
	display: flex;
}

@mixin inline-flex {
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}

	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;

	@if $value == nowrap {
		-ms-flex-wrap: none;
	} @else {
		-ms-flex-wrap: $value;
	}

	flex-wrap: $value;
}

@mixin flex-flow($values: (row nowrap)) {
	-webkit-flex-flow: $values;
	-moz-flex-flow: $values;
	-ms-flex-flow: $values;
	flex-flow: $values;
}

@mixin order($value) {
	-webkit-box-ordinal-group: $value;
	-moz-box-ordinal-group: $value;
	-ms-flex-order: $value;
	-webkit-order: $value;
	order: $value;
}

@mixin flex-grow($value: 0) {
	-webkit-box-flex: $value;
	-webkit-flex-grow: $value;
	-moz-flex-grow: $value;
	-ms-flex-positive: $value;
	flex-grow: $value;
}

@mixin flex-shrink($value: 1) {
	-webkit-flex-shrink: $value;
	-moz-flex-shrink: $value;
	-ms-flex-negative: $value;
	flex-shrink: $value;
}

@mixin flex-basis($value: auto) {
	-webkit-flex-basis: $value;
	-moz-flex-basis: $value;
	-ms-flex-preferred-size: $value;
	flex-basis: $value;
}

@mixin flex($grow: 1, $shrink: null, $basis: null) {
	$grow-box: $grow;

	@if type-of($grow) == "list" {
		$grow-box: nth($grow, 1);
	}

	-webkit-box-flex: $grow-box;
	-webkit-flex: $grow $shrink $basis;
	-moz-box-flex: $grow-box;
	-moz-flex: $grow $shrink $basis;
	-ms-flex: $grow $shrink $basis;
	flex: $grow $shrink $basis;
}

@mixin justify-content($value: flex-start) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
	} @else if $value == space-around {
		-webkit-box-pack: center;
		-ms-flex-pack: center;
	} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
	}

	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}

	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

@mixin align-content($value: stretch) {
	-webkit-align-content: $value;
	-moz-align-content: $value;

	@if $value == flex-start {
		-ms-flex-line-pack: start;
	} @else if $value == flex-end {
		-ms-flex-line-pack: end;
	} @else {
		-ms-flex-line-pack: $value;
	}

	align-content: $value;
}

@mixin align-self($value: auto) {
	-webkit-align-self: $value;
	-moz-align-self: $value;

	@if $value == flex-start {
		-ms-flex-item-align: start;
	} @else if $value == flex-end {
		-ms-flex-item-align: end;
	} @else {
		-ms-flex-item-align: $value;
	}

	align-self: $value;
}
